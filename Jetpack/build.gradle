plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.0.0-beta09"
        kotlinCompilerVersion kotlin_version
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {

    implementation project(path: ':Core')

    // Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // Datastore
    implementation "androidx.datastore:datastore:1.0.0-beta02"

    // Lifecycle+LiveData+ViewModel
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //------------------------- Compose Start-------------------------------------------
    // 各种库版本：https://developer.android.com/jetpack/androidx/releases/activity?hl=zh-cn


    def compose_version = "1.0.0-beta09"
    // 1. ui
    implementation "androidx.compose.ui:ui:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    // 2. Foundation
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // 3. Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // 4. animation
    implementation "androidx.compose.animation:animation:$compose_version"
    // 5. compiler
    implementation "androidx.compose.compiler:compiler:$compose_version"
    // 6. runtime
    // Integration with observables
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"

    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.3.0-beta02'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07'

    /**
     * 查看Jetpack Compose 对应 Accompanist库版本号
     * https://github.com/google/accompanist/releases/tag/v0.12.0
     * Built to work with Jetpack Compose v1.0.0-beta09  专为与 Jetpack Compose 配合使用而构建
     *
     * 查看补充功能：https://github.com/google/accompanist
     * Accompanist 是一组库，旨在为 Jetpack Compose 补充开发人员通常需要但尚不可用的功能，例如ViewPager、Flow等。
     */
    implementation 'com.google.accompanist:accompanist-insets:0.12.0'
    implementation "com.google.accompanist:accompanist-pager:0.12.0"

    implementation 'androidx.activity:activity-ktx:1.2.0'
    //------------------------- Compose End---------------------------------------------
}